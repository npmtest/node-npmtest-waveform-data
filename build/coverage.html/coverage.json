{"/home/travis/build/npmtest/node-npmtest-waveform-data/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_waveform_data */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/lib.npmtest_waveform_data.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/lib.npmtest_waveform_data.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":58}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":64}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_waveform_data */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_waveform_data = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_waveform_data = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":57}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":71},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-waveform-data && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_waveform_data */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_waveform_data","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_waveform_data.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_waveform_data.rollup.js'] =","            local.assetsDict['/assets.npmtest_waveform_data.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_waveform_data.__dirname + '/lib.npmtest_waveform_data.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/waveform-data.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/waveform-data.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"branchMap":{},"code":["\"use strict\";","","var WaveformData = require(\"./lib/core\");","WaveformData.adapters = require(\"./lib/adapters\");","","module.exports = WaveformData;",""],"l":{"3":1,"4":1,"6":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/core.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":6,"116":6,"117":12,"118":12,"119":12,"120":12,"121":0,"122":12,"123":4,"124":4,"125":4,"126":4,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":1,"135":0},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":6,"13":6,"14":12,"15":4,"16":4,"17":4,"18":4,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"WaveformData","line":30,"loc":{"start":{"line":30,"column":36},"end":{"line":30,"column":81}}},"2":{"name":"createFromResponseData","line":98,"loc":{"start":{"line":98,"column":22},"end":{"line":98,"column":59}}},"3":{"name":"(anonymous_3)","line":106,"loc":{"start":{"line":106,"column":42},"end":{"line":106,"column":62}}},"4":{"name":"(anonymous_4)","line":145,"loc":{"start":{"line":145,"column":10},"end":{"line":145,"column":30}}},"5":{"name":"setSegment","line":194,"loc":{"start":{"line":194,"column":15},"end":{"line":194,"column":58}}},"6":{"name":"setPoint","line":222,"loc":{"start":{"line":222,"column":13},"end":{"line":222,"column":53}}},"7":{"name":"removePoint","line":248,"loc":{"start":{"line":248,"column":16},"end":{"line":248,"column":49}}},"8":{"name":"(anonymous_8)","line":283,"loc":{"start":{"line":283,"column":12},"end":{"line":283,"column":29}}},"9":{"name":"(anonymous_9)","line":317,"loc":{"start":{"line":317,"column":94},"end":{"line":317,"column":114}}},"10":{"name":"sample_at_pixel","line":344,"loc":{"start":{"line":344,"column":26},"end":{"line":344,"column":53}}},"11":{"name":"add_sample","line":348,"loc":{"start":{"line":348,"column":21},"end":{"line":348,"column":50}}},"12":{"name":"(anonymous_12)","line":434,"loc":{"start":{"line":434,"column":9},"end":{"line":434,"column":11}}},"13":{"name":"(anonymous_13)","line":455,"loc":{"start":{"line":455,"column":9},"end":{"line":455,"column":11}}},"14":{"name":"getOffsetValues","line":466,"loc":{"start":{"line":466,"column":16},"end":{"line":466,"column":67}}},"15":{"name":"(anonymous_15)","line":492,"loc":{"start":{"line":492,"column":14},"end":{"line":492,"column":16}}},"16":{"name":"(anonymous_16)","line":511,"loc":{"start":{"line":511,"column":21},"end":{"line":511,"column":23}}},"17":{"name":"(anonymous_17)","line":526,"loc":{"start":{"line":526,"column":23},"end":{"line":526,"column":25}}},"18":{"name":"(anonymous_18)","line":540,"loc":{"start":{"line":540,"column":23},"end":{"line":540,"column":25}}},"19":{"name":"at_sample_proxy","line":557,"loc":{"start":{"line":557,"column":6},"end":{"line":557,"column":37}}},"20":{"name":"at_time","line":571,"loc":{"start":{"line":571,"column":11},"end":{"line":571,"column":33}}},"21":{"name":"time","line":586,"loc":{"start":{"line":586,"column":8},"end":{"line":586,"column":28}}},"22":{"name":"isInOffset","line":607,"loc":{"start":{"line":607,"column":13},"end":{"line":607,"column":39}}},"23":{"name":"getMinValue","line":622,"loc":{"start":{"line":622,"column":14},"end":{"line":622,"column":42}}},"24":{"name":"getMaxValue","line":637,"loc":{"start":{"line":637,"column":14},"end":{"line":637,"column":42}}},"25":{"name":"WaveformDataAdapter","line":655,"loc":{"start":{"line":655,"column":23},"end":{"line":655,"column":66}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":46}},"3":{"start":{"line":30,"column":0},"end":{"line":73,"column":2}},"4":{"start":{"line":36,"column":2},"end":{"line":36,"column":57}},"5":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"6":{"start":{"line":70,"column":2},"end":{"line":70,"column":19}},"7":{"start":{"line":72,"column":2},"end":{"line":72,"column":38}},"8":{"start":{"line":98,"column":0},"end":{"line":118,"column":2}},"9":{"start":{"line":99,"column":2},"end":{"line":99,"column":21}},"10":{"start":{"line":100,"column":2},"end":{"line":100,"column":21}},"11":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"12":{"start":{"line":103,"column":4},"end":{"line":103,"column":94}},"13":{"start":{"line":106,"column":2},"end":{"line":111,"column":5}},"14":{"start":{"line":107,"column":4},"end":{"line":110,"column":5}},"15":{"start":{"line":108,"column":6},"end":{"line":108,"column":50}},"16":{"start":{"line":109,"column":6},"end":{"line":109,"column":18}},"17":{"start":{"line":113,"column":2},"end":{"line":115,"column":3}},"18":{"start":{"line":114,"column":4},"end":{"line":114,"column":83}},"19":{"start":{"line":117,"column":2},"end":{"line":117,"column":52}},"20":{"start":{"line":125,"column":0},"end":{"line":640,"column":2}},"21":{"start":{"line":146,"column":4},"end":{"line":146,"column":42}},"22":{"start":{"line":148,"column":4},"end":{"line":150,"column":5}},"23":{"start":{"line":149,"column":6},"end":{"line":149,"column":87}},"24":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"25":{"start":{"line":153,"column":6},"end":{"line":153,"column":118}},"26":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"27":{"start":{"line":157,"column":6},"end":{"line":157,"column":91}},"28":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"29":{"start":{"line":161,"column":6},"end":{"line":161,"column":110}},"30":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"31":{"start":{"line":165,"column":6},"end":{"line":165,"column":24}},"32":{"start":{"line":168,"column":4},"end":{"line":168,"column":30}},"33":{"start":{"line":169,"column":4},"end":{"line":169,"column":26}},"34":{"start":{"line":170,"column":4},"end":{"line":170,"column":37}},"35":{"start":{"line":195,"column":4},"end":{"line":197,"column":5}},"36":{"start":{"line":196,"column":6},"end":{"line":196,"column":29}},"37":{"start":{"line":199,"column":4},"end":{"line":199,"column":74}},"38":{"start":{"line":201,"column":4},"end":{"line":201,"column":37}},"39":{"start":{"line":223,"column":4},"end":{"line":225,"column":5}},"40":{"start":{"line":224,"column":6},"end":{"line":224,"column":29}},"41":{"start":{"line":227,"column":4},"end":{"line":227,"column":69}},"42":{"start":{"line":229,"column":4},"end":{"line":229,"column":35}},"43":{"start":{"line":249,"column":4},"end":{"line":251,"column":5}},"44":{"start":{"line":250,"column":6},"end":{"line":250,"column":37}},"45":{"start":{"line":284,"column":4},"end":{"line":288,"column":5}},"46":{"start":{"line":285,"column":6},"end":{"line":287,"column":8}},"47":{"start":{"line":290,"column":4},"end":{"line":290,"column":95}},"48":{"start":{"line":291,"column":4},"end":{"line":291,"column":98}},"49":{"start":{"line":292,"column":4},"end":{"line":292,"column":77}},"50":{"start":{"line":293,"column":4},"end":{"line":293,"column":77}},"51":{"start":{"line":295,"column":4},"end":{"line":295,"column":94}},"52":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"53":{"start":{"line":298,"column":6},"end":{"line":298,"column":114}},"54":{"start":{"line":301,"column":4},"end":{"line":303,"column":5}},"55":{"start":{"line":302,"column":6},"end":{"line":302,"column":116}},"56":{"start":{"line":305,"column":4},"end":{"line":307,"column":5}},"57":{"start":{"line":306,"column":6},"end":{"line":306,"column":111}},"58":{"start":{"line":309,"column":4},"end":{"line":311,"column":5}},"59":{"start":{"line":310,"column":6},"end":{"line":310,"column":111}},"60":{"start":{"line":313,"column":4},"end":{"line":315,"column":5}},"61":{"start":{"line":314,"column":6},"end":{"line":314,"column":119}},"62":{"start":{"line":317,"column":4},"end":{"line":319,"column":10}},"63":{"start":{"line":318,"column":6},"end":{"line":318,"column":53}},"64":{"start":{"line":321,"column":4},"end":{"line":323,"column":5}},"65":{"start":{"line":322,"column":6},"end":{"line":322,"column":134}},"66":{"start":{"line":325,"column":4},"end":{"line":325,"column":25}},"67":{"start":{"line":326,"column":4},"end":{"line":326,"column":114}},"68":{"start":{"line":327,"column":4},"end":{"line":327,"column":35}},"69":{"start":{"line":328,"column":4},"end":{"line":328,"column":26}},"70":{"start":{"line":330,"column":4},"end":{"line":330,"column":48}},"71":{"start":{"line":331,"column":4},"end":{"line":331,"column":47}},"72":{"start":{"line":332,"column":4},"end":{"line":332,"column":49}},"73":{"start":{"line":333,"column":4},"end":{"line":333,"column":67}},"74":{"start":{"line":334,"column":4},"end":{"line":334,"column":67}},"75":{"start":{"line":335,"column":4},"end":{"line":335,"column":25}},"76":{"start":{"line":336,"column":4},"end":{"line":336,"column":24}},"77":{"start":{"line":338,"column":4},"end":{"line":340,"column":5}},"78":{"start":{"line":339,"column":6},"end":{"line":339,"column":83}},"79":{"start":{"line":342,"column":4},"end":{"line":342,"column":57}},"80":{"start":{"line":344,"column":4},"end":{"line":346,"column":6}},"81":{"start":{"line":345,"column":6},"end":{"line":345,"column":47}},"82":{"start":{"line":348,"column":4},"end":{"line":350,"column":6}},"83":{"start":{"line":349,"column":6},"end":{"line":349,"column":33}},"84":{"start":{"line":352,"column":4},"end":{"line":397,"column":5}},"85":{"start":{"line":353,"column":6},"end":{"line":369,"column":7}},"86":{"start":{"line":354,"column":8},"end":{"line":356,"column":9}},"87":{"start":{"line":355,"column":10},"end":{"line":355,"column":31}},"88":{"start":{"line":358,"column":8},"end":{"line":358,"column":39}},"89":{"start":{"line":360,"column":8},"end":{"line":360,"column":23}},"90":{"start":{"line":362,"column":8},"end":{"line":362,"column":51}},"91":{"start":{"line":363,"column":8},"end":{"line":363,"column":55}},"92":{"start":{"line":365,"column":8},"end":{"line":368,"column":9}},"93":{"start":{"line":366,"column":10},"end":{"line":366,"column":26}},"94":{"start":{"line":367,"column":10},"end":{"line":367,"column":26}},"95":{"start":{"line":371,"column":6},"end":{"line":371,"column":44}},"96":{"start":{"line":372,"column":6},"end":{"line":372,"column":39}},"97":{"start":{"line":374,"column":6},"end":{"line":376,"column":7}},"98":{"start":{"line":375,"column":8},"end":{"line":375,"column":33}},"99":{"start":{"line":378,"column":6},"end":{"line":392,"column":7}},"100":{"start":{"line":379,"column":8},"end":{"line":379,"column":45}},"101":{"start":{"line":381,"column":8},"end":{"line":383,"column":9}},"102":{"start":{"line":382,"column":10},"end":{"line":382,"column":22}},"103":{"start":{"line":385,"column":8},"end":{"line":385,"column":45}},"104":{"start":{"line":387,"column":8},"end":{"line":389,"column":9}},"105":{"start":{"line":388,"column":10},"end":{"line":388,"column":22}},"106":{"start":{"line":391,"column":8},"end":{"line":391,"column":22}},"107":{"start":{"line":394,"column":6},"end":{"line":396,"column":7}},"108":{"start":{"line":395,"column":8},"end":{"line":395,"column":14}},"109":{"start":{"line":399,"column":4},"end":{"line":406,"column":5}},"110":{"start":{"line":400,"column":6},"end":{"line":402,"column":7}},"111":{"start":{"line":401,"column":8},"end":{"line":401,"column":29}},"112":{"start":{"line":404,"column":9},"end":{"line":406,"column":5}},"113":{"start":{"line":405,"column":6},"end":{"line":405,"column":27}},"114":{"start":{"line":408,"column":4},"end":{"line":414,"column":37}},"115":{"start":{"line":435,"column":4},"end":{"line":435,"column":71}},"116":{"start":{"line":456,"column":4},"end":{"line":456,"column":71}},"117":{"start":{"line":467,"column":4},"end":{"line":467,"column":31}},"118":{"start":{"line":468,"column":4},"end":{"line":468,"column":20}},"119":{"start":{"line":470,"column":4},"end":{"line":470,"column":30}},"120":{"start":{"line":472,"column":4},"end":{"line":474,"column":5}},"121":{"start":{"line":473,"column":6},"end":{"line":473,"column":52}},"122":{"start":{"line":476,"column":4},"end":{"line":476,"column":18}},"123":{"start":{"line":493,"column":4},"end":{"line":493,"column":81}},"124":{"start":{"line":512,"column":4},"end":{"line":512,"column":80}},"125":{"start":{"line":527,"column":4},"end":{"line":527,"column":57}},"126":{"start":{"line":541,"column":4},"end":{"line":541,"column":57}},"127":{"start":{"line":558,"column":4},"end":{"line":558,"column":34}},"128":{"start":{"line":572,"column":4},"end":{"line":572,"column":78}},"129":{"start":{"line":587,"column":4},"end":{"line":587,"column":42}},"130":{"start":{"line":608,"column":4},"end":{"line":608,"column":65}},"131":{"start":{"line":623,"column":4},"end":{"line":623,"column":39}},"132":{"start":{"line":638,"column":4},"end":{"line":638,"column":45}},"133":{"start":{"line":647,"column":0},"end":{"line":647,"column":27}},"134":{"start":{"line":655,"column":0},"end":{"line":657,"column":2}},"135":{"start":{"line":656,"column":2},"end":{"line":656,"column":28}}},"branchMap":{"1":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"2":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":6},"end":{"line":102,"column":10}},{"start":{"line":102,"column":14},"end":{"line":102,"column":38}},{"start":{"line":102,"column":43},"end":{"line":102,"column":65}},{"start":{"line":102,"column":69},"end":{"line":102,"column":87}}]},"3":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":41},"end":{"line":103,"column":54}},{"start":{"line":103,"column":58},"end":{"line":103,"column":92}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":58},"end":{"line":103,"column":75}},{"start":{"line":103,"column":79},"end":{"line":103,"column":92}}]},"5":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]},"6":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":55},"end":{"line":107,"column":62}},{"start":{"line":107,"column":66},"end":{"line":107,"column":70}}]},"7":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"8":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":26},"end":{"line":117,"column":33}},{"start":{"line":117,"column":37},"end":{"line":117,"column":41}}]},"9":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"11":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"12":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":4}},{"start":{"line":160,"column":4},"end":{"line":160,"column":4}}]},"13":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"14":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"15":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":32}},{"start":{"line":195,"column":36},"end":{"line":195,"column":55}},{"start":{"line":195,"column":59},"end":{"line":195,"column":82}}]},"16":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"17":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":7},"end":{"line":223,"column":31}},{"start":{"line":223,"column":35},"end":{"line":223,"column":54}},{"start":{"line":223,"column":58},"end":{"line":223,"column":81}}]},"18":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"19":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"20":{"line":290,"type":"cond-expr","locations":[{"start":{"line":290,"column":68},"end":{"line":290,"column":87}},{"start":{"line":290,"column":90},"end":{"line":290,"column":94}}]},"21":{"line":291,"type":"cond-expr","locations":[{"start":{"line":291,"column":70},"end":{"line":291,"column":90}},{"start":{"line":291,"column":93},"end":{"line":291,"column":97}}]},"22":{"line":292,"type":"cond-expr","locations":[{"start":{"line":292,"column":56},"end":{"line":292,"column":69}},{"start":{"line":292,"column":72},"end":{"line":292,"column":76}}]},"23":{"line":293,"type":"cond-expr","locations":[{"start":{"line":293,"column":56},"end":{"line":293,"column":69}},{"start":{"line":293,"column":72},"end":{"line":293,"column":76}}]},"24":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":32},"end":{"line":295,"column":60}},{"start":{"line":295,"column":64},"end":{"line":295,"column":93}}]},"25":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"26":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":8},"end":{"line":297,"column":36}},{"start":{"line":297,"column":40},"end":{"line":297,"column":76}}]},"27":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"28":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":8},"end":{"line":301,"column":37}},{"start":{"line":301,"column":41},"end":{"line":301,"column":78}}]},"29":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":4},"end":{"line":305,"column":4}},{"start":{"line":305,"column":4},"end":{"line":305,"column":4}}]},"30":{"line":305,"type":"binary-expr","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":30}},{"start":{"line":305,"column":34},"end":{"line":305,"column":63}}]},"31":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":4},"end":{"line":309,"column":4}},{"start":{"line":309,"column":4},"end":{"line":309,"column":4}}]},"32":{"line":309,"type":"binary-expr","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":30}},{"start":{"line":309,"column":34},"end":{"line":309,"column":63}}]},"33":{"line":313,"type":"if","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":4}},{"start":{"line":313,"column":4},"end":{"line":313,"column":4}}]},"34":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":8},"end":{"line":313,"column":22}},{"start":{"line":313,"column":26},"end":{"line":313,"column":40}}]},"35":{"line":318,"type":"cond-expr","locations":[{"start":{"line":318,"column":46},"end":{"line":318,"column":47}},{"start":{"line":318,"column":50},"end":{"line":318,"column":51}}]},"36":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"37":{"line":321,"type":"binary-expr","locations":[{"start":{"line":321,"column":8},"end":{"line":321,"column":29}},{"start":{"line":321,"column":33},"end":{"line":321,"column":65}}]},"38":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":28},"end":{"line":326,"column":41}},{"start":{"line":326,"column":45},"end":{"line":326,"column":113}}]},"39":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":22},"end":{"line":331,"column":41}},{"start":{"line":331,"column":45},"end":{"line":331,"column":46}}]},"40":{"line":332,"type":"binary-expr","locations":[{"start":{"line":332,"column":23},"end":{"line":332,"column":43}},{"start":{"line":332,"column":47},"end":{"line":332,"column":48}}]},"41":{"line":333,"type":"cond-expr","locations":[{"start":{"line":333,"column":34},"end":{"line":333,"column":62}},{"start":{"line":333,"column":65},"end":{"line":333,"column":66}}]},"42":{"line":334,"type":"cond-expr","locations":[{"start":{"line":334,"column":34},"end":{"line":334,"column":62}},{"start":{"line":334,"column":65},"end":{"line":334,"column":66}}]},"43":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":4},"end":{"line":338,"column":4}},{"start":{"line":338,"column":4},"end":{"line":338,"column":4}}]},"44":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":8},"end":{"line":354,"column":8}},{"start":{"line":354,"column":8},"end":{"line":354,"column":8}}]},"45":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":8}},{"start":{"line":365,"column":8},"end":{"line":365,"column":8}}]},"46":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":6},"end":{"line":374,"column":6}},{"start":{"line":374,"column":6},"end":{"line":374,"column":6}}]},"47":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":8},"end":{"line":381,"column":8}},{"start":{"line":381,"column":8},"end":{"line":381,"column":8}}]},"48":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":8},"end":{"line":387,"column":8}},{"start":{"line":387,"column":8},"end":{"line":387,"column":8}}]},"49":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":6},"end":{"line":394,"column":6}},{"start":{"line":394,"column":6},"end":{"line":394,"column":6}}]},"50":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":10},"end":{"line":394,"column":31}},{"start":{"line":394,"column":35},"end":{"line":394,"column":88}}]},"51":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":4},"end":{"line":399,"column":4}},{"start":{"line":399,"column":4},"end":{"line":399,"column":4}}]},"52":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":6},"end":{"line":400,"column":6}},{"start":{"line":400,"column":6},"end":{"line":400,"column":6}}]},"53":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":10},"end":{"line":400,"column":62}},{"start":{"line":400,"column":66},"end":{"line":400,"column":98}}]},"54":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":9},"end":{"line":404,"column":9}},{"start":{"line":404,"column":9},"end":{"line":404,"column":9}}]},"55":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":11},"end":{"line":608,"column":37}},{"start":{"line":608,"column":41},"end":{"line":608,"column":64}}]}},"code":["\"use strict\";","","var WaveformDataSegment = require(\"./segment.js\");","var WaveformDataPoint = require(\"./point.js\");","","/**"," * Facade to iterate on audio waveform response."," *"," * ```javascript"," *  var waveform = new WaveformData({ ... }, WaveformData.adapters.object);"," *"," *  var json_waveform = new WaveformData(xhr.responseText, WaveformData.adapters.object);"," *"," *  var arraybuff_waveform = new WaveformData(getArrayBufferData(), WaveformData.adapters.arraybuffer);"," * ```"," *"," * ## Offsets"," *"," * An **offset** is a non-destructive way to iterate on a subset of data."," *"," * It is the easiest way to **navigate** through data without having to deal with complex calculations."," * Simply iterate over the data to display them."," *"," * *Notice*: the default offset is the entire set of data."," *"," * @param {String|ArrayBuffer|Mixed} response_data Waveform data, to be consumed by the related adapter."," * @param {WaveformData.adapter|Function} adapter Backend adapter used to manage access to the data."," * @constructor"," */","var WaveformData = module.exports = function WaveformData(response_data, adapter){","  /**","   * Backend adapter used to manage access to the data.","   *","   * @type {Object}","   */","  this.adapter = adapter.fromResponseData(response_data);","","  /**","   * Defined segments.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   *","   * console.log(waveform.segments.speakerA);          // -> undefined","   *","   * waveform.set_segment(30, 90, \"speakerA\");","   *","   * console.log(waveform.segments.speakerA.start);    // -> 30","   * ```","   *","   * @type {Object} A hash of `WaveformDataSegment` objects.","   */","  this.segments = {};","","  /**","   * Defined points.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   *","   * console.log(waveform.points.speakerA);          // -> undefined","   *","   * waveform.set_point(30, \"speakerA\");","   *","   * console.log(waveform.points.speakerA.timeStamp);    // -> 30","   * ```","   *","   * @type {Object} A hash of `WaveformDataPoint` objects.","   */","  this.points = {};","","  this.offset(0, this.adapter.length);","};","","/**"," * Creates an instance of WaveformData by guessing the adapter from the data type."," * As an icing sugar, it will also do the detection job from an XMLHttpRequest response."," *"," * ```javascript"," * var xhr = new XMLHttpRequest();"," * xhr.open(\"GET\", \"http://example.com/waveforms/track.dat\");"," * xhr.responseType = \"arraybuffer\";"," *"," * xhr.addEventListener(\"load\", function onResponse(progressEvent){"," *   var waveform = WaveformData.create(progressEvent.target);"," *"," *   console.log(waveform.duration);"," * });"," *"," * xhr.send();"," * ```"," *"," * @static"," * @throws TypeError"," * @param {XMLHttpRequest|Mixed} data"," * @return {WaveformData}"," */","WaveformData.create = function createFromResponseData(data){","  var adapter = null;","  var xhrData = null;","","  if (data && typeof data === \"object\" && (\"responseText\" in data || \"response\" in data)){","    xhrData = (\"responseType\" in data) ? data.response : (data.responseText || data.response);","  }","","  Object.keys(WaveformData.adapters).some(function(adapter_id){","    if (WaveformData.adapters[adapter_id].isCompatible(xhrData || data)){","      adapter = WaveformData.adapters[adapter_id];","      return true;","    }","  });","","  if (adapter === null){","    throw new TypeError(\"Could not detect a WaveformData adapter from the input.\");","  }","","  return new WaveformData(xhrData || data, adapter);","};","","/**"," * Public API for the Waveform Data manager."," *"," * @namespace WaveformData"," */","WaveformData.prototype = {","  /**","   * Clamp an offset of data upon the whole response body.","   * Pros: it's just a reference, not a new array. So it's fast.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.offset_length);   // -> 150","   * console.log(waveform.min[0]);          // -> -12","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.min.length);      // -> 30","   * console.log(waveform.min[0]);          // -> -9","   * ```","   *","   * @param {Integer} start New beginning of the offset. (inclusive)","   * @param {Integer} end New ending of the offset (exclusive)","   */","  offset: function(start, end){","    var data_length = this.adapter.length;","","    if (end < 0){","      throw new RangeError(\"End point must be non-negative [\" + Number(end) + \" < 0]\");","    }","","    if (end <= start){","      throw new RangeError(\"We can't end prior to the starting point [\" + Number(end) + \" <= \" + Number(start) + \"]\");","    }","","    if (start < 0){","      throw new RangeError(\"Start point must be non-negative [\" + Number(start) + \" < 0]\");","    }","","    if (start >= data_length){","      throw new RangeError(\"Start point must be within range [\" + Number(start) + \" >= \" + data_length + \"]\");","    }","","    if (end > data_length){","      end = data_length;","    }","","    this.offset_start = start;","    this.offset_end = end;","    this.offset_length = end - start;","  },","  /**","   * Creates a new segment of data.","   * Pretty handy if you need to bookmark a duration and display it according to the current offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(Object.keys(waveform.segments));          // -> []","   *","   * waveform.set_segment(10, 120);","   * waveform.set_segment(30, 90, \"speakerA\");","   *","   * console.log(Object.keys(waveform.segments));          // -> ['default', 'speakerA']","   * console.log(waveform.segments.default.min.length);    // -> 110","   * console.log(waveform.segments.speakerA.min.length);   // -> 60","   * ```","   *","   * @param {Integer} start Beginning of the segment (inclusive)","   * @param {Integer} end Ending of the segment (exclusive)","   * @param {String*} identifier Unique identifier. If nothing is specified, *default* will be used as a value.","   * @return {WaveformDataSegment}","   */","  set_segment: function setSegment(start, end, identifier){","    if (identifier === undefined || identifier === null || identifier.length === 0) {","      identifier = \"default\";","    }","","    this.segments[identifier] = new WaveformDataSegment(this, start, end);","","    return this.segments[identifier];","  },","  /**","   * Creates a new point of data.","   * Pretty handy if you need to bookmark a specific point and display it according to the current offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(Object.keys(waveform.points));          // -> []","   *","   * waveform.set_point(10);","   * waveform.set_point(30, \"speakerA\");","   *","   * console.log(Object.keys(waveform.points));          // -> ['default', 'speakerA']","   * ```","   *","   * @param {Integer} timeStamp the time to place the bookmark","   * @param {String*} identifier Unique identifier. If nothing is specified, *default* will be used as a value.","   * @return {WaveformDataPoint}","   */","  set_point: function setPoint(timeStamp, identifier){","    if(identifier === undefined || identifier === null || identifier.length === 0) {","      identifier = \"default\";","    }","","    this.points[identifier] = new WaveformDataPoint(this, timeStamp);","","    return this.points[identifier];","  },","  /**","   * Removes a point of data.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(Object.keys(waveform.points));          // -> []","   *","   * waveform.set_point(30, \"speakerA\");","   * console.log(Object.keys(waveform.points));          // -> ['speakerA']","   * waveform.remove_point(\"speakerA\");","   * console.log(Object.keys(waveform.points));          // -> []","   * ```","   *","   * @param {String*} identifier Unique identifier. If nothing is specified, *default* will be used as a value.","   * @return null","   */","  remove_point: function removePoint(identifier) {","    if(this.points[identifier]) {","      delete this.points[identifier];","    }","  },","  /**","   * Creates a new WaveformData object with resampled data.","   * Returns a rescaled waveform, to either fit the waveform to a specific width, or to a specific zoom level.","   *","   * **Note**: You may specify either the *width* or the *scale*, but not both. The `scale` will be deduced from the `width` you want to fit the data into.","   *","   * Adapted from Sequence::GetWaveDisplay in Audacity, with permission.","   *","   * ```javascript","   * // ...","   * var waveform = WaveformData.create({ ... });","   *","   * // fitting the data in a 500px wide canvas","   * var resampled_waveform = waveform.resample({ width: 500 });","   *","   * console.log(resampled_waveform.min.length);   // -> 500","   *","   * // zooming out on a 3 times less precise scale","   * var resampled_waveform = waveform.resample({ scale: waveform.adapter.scale * 3 });","   *","   * // partial resampling (to perform fast animations involving a resampling per animation frame)","   * var partially_resampled_waveform = waveform.resample({ width: 500, from: 0, to: 500 });","   *","   * // ...","   * ```","   *","   * @see https://code.google.com/p/audacity/source/browse/audacity-src/trunk/src/Sequence.cpp","   * @param {Number|{width: Number, scale: Number}} options Either a constraint width or a constraint sample rate","   * @return {WaveformData} New resampled object","   */","  resample: function(options){","    if (typeof options === 'number'){","      options = {","        width: options","      };","    }","","    options.input_index = typeof options.input_index === 'number' ? options.input_index : null;","    options.output_index = typeof options.output_index === 'number' ? options.output_index : null;","    options.scale = typeof options.scale === 'number' ? options.scale : null;","    options.width = typeof options.width === 'number' ? options.width : null;","","    var is_partial_resampling = Boolean(options.input_index) || Boolean(options.output_index);","","    if (options.input_index !== null && (options.input_index >= 0) === false){","      throw new RangeError('options.input_index should be a positive integer value. ['+ options.input_index +']');","    }","","    if (options.output_index !== null && (options.output_index >= 0) === false){","      throw new RangeError('options.output_index should be a positive integer value. ['+ options.output_index +']');","    }","","    if (options.width !== null && (options.width > 0) === false){","      throw new RangeError('options.width should be a strictly positive integer value. ['+ options.width +']');","    }","","    if (options.scale !== null && (options.scale > 0) === false){","      throw new RangeError('options.scale should be a strictly positive integer value. ['+ options.scale +']');","    }","","    if (!options.scale && !options.width){","      throw new RangeError('You should provide either a resampling scale or a width in pixel the data should fit in.');","    }","","    var definedPartialOptionsCount = ['width', 'scale', 'output_index', 'input_index'].reduce(function(count, key){","      return count + (options[key] === null ? 0 : 1);","    }, 0);","","    if (is_partial_resampling && definedPartialOptionsCount !== 4) {","      throw new Error('Some partial resampling options are missing. You provided ' + definedPartialOptionsCount + ' of them over 4.');","    }","","    var output_data = [];","    var samples_per_pixel = options.scale || Math.floor(this.duration * this.adapter.sample_rate / options.width);    //scale we want to reach","    var scale = this.adapter.scale;   //scale we are coming from","    var channel_count = 2;","","    var input_buffer_size = this.adapter.length; //the amount of data we want to resample i.e. final zoom want to resample all data but for intermediate zoom we want to resample subset","    var input_index = options.input_index || 0; //is this start point? or is this the index at current scale","    var output_index = options.output_index || 0; //is this end point? or is this the index at scale we want to be?","    var min = input_buffer_size ? this.min_sample(input_index) : 0; //min value for peak in waveform","    var max = input_buffer_size ? this.max_sample(input_index) : 0; //max value for peak in waveform","    var min_value = -128;","    var max_value = 127;","","    if (samples_per_pixel < scale){","      throw new Error(\"Zoom level \"+samples_per_pixel+\" too low, minimum: \"+scale);","    }","","    var where, prev_where, stop, value, last_input_index;","","    var sample_at_pixel = function sample_at_pixel(x){","      return Math.floor(x * samples_per_pixel);","    };","","    var add_sample = function add_sample(min, max){","      output_data.push(min, max);","    };","","    while (input_index < input_buffer_size) {","      while (Math.floor(sample_at_pixel(output_index) / scale) <= input_index){","        if (output_index){","          add_sample(min, max);","        }","","        last_input_index = input_index;","","        output_index++;","","        where      = sample_at_pixel(output_index);","        prev_where = sample_at_pixel(output_index - 1);","","        if (where !== prev_where){","          min = max_value;","          max = min_value;","        }","      }","","      where = sample_at_pixel(output_index);","      stop = Math.floor(where / scale);","","      if (stop > input_buffer_size){","        stop = input_buffer_size;","      }","","      while (input_index < stop){","        value = this.min_sample(input_index);","","        if (value < min){","          min = value;","        }","","        value = this.max_sample(input_index);","","        if (value > max){","          max = value;","        }","","        input_index++;","      }","","      if (is_partial_resampling && (output_data.length / channel_count) >= options.width) {","        break;","      }","    }","","    if (is_partial_resampling) {","      if ((output_data.length / channel_count) > options.width && input_index !== last_input_index){","        add_sample(min, max);","      }","    }","    else if(input_index !== last_input_index){","      add_sample(min, max);","    }","","    return new WaveformData({","      version: this.adapter.version,","      samples_per_pixel: samples_per_pixel,","      length: output_data.length / channel_count,","      data: output_data,","      sample_rate: this.adapter.sample_rate","    }, WaveformData.adapters.object);","  },","  /**","   * Returns all the min peaks values.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.min.length);      // -> 150","   * console.log(waveform.min[0]);          // -> -12","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.min.length);      // -> 30","   * console.log(waveform.min[0]);          // -> -9","   * ```","   *","   * @api","   * @return {Array.<Integer>} Min values contained in the offset.","   */","  get min(){","    return this.offsetValues(this.offset_start, this.offset_length, 0);","  },","  /**","   * Returns all the max peaks values.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.max.length);      // -> 150","   * console.log(waveform.max[0]);          // -> 12","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.max.length);      // -> 30","   * console.log(waveform.max[0]);          // -> 5","   * ```","   *","   * @api","   * @return {Array.<Integer>} Max values contained in the offset.","   */","  get max(){","    return this.offsetValues(this.offset_start, this.offset_length, 1);","  },","  /**","   * Return the unpacked values for a particular offset.","   *","   * @param {Integer} start","   * @param {Integer} length","   * @param {Integer} correction The step to skip for each iteration (as the response body is [min, max, min, max...])","   * @return {Array.<Integer>}","   */","  offsetValues: function getOffsetValues(start, length, correction){","    var adapter = this.adapter;","    var values = [];","","    correction += (start * 2);  //offsetting the positioning query","","    for (var i = 0; i < length; i++){","      values.push(adapter.at((i * 2) + correction));","    }","","    return values;","  },","  /**","   * Compute the duration in seconds of the audio file.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   * console.log(waveform.duration);    // -> 10.33333333333","   *","   * waveform.offset(20, 50);","   * console.log(waveform.duration);    // -> 10.33333333333","   * ```","   *","   * @api","   * @return {number} Duration of the audio waveform, in seconds.","   */","  get duration(){","    return (this.adapter.length * this.adapter.scale) / this.adapter.sample_rate;","  },","  /**","   * Return the duration in seconds of the current offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.offset_duration);    // -> 10.33333333333","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.offset_duration);    // -> 2.666666666667","   * ```","   *","   * @api","   * @return {number} Duration of the offset, in seconds.","   */","  get offset_duration(){","    return (this.offset_length * this.adapter.scale) / this.adapter.sample_rate;","  },","  /**","   * Return the number of pixels per second.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.pixels_per_second);       // -> 93.75","   * ```","   *","   * @api","   * @return {number} Number of pixels per second.","   */","  get pixels_per_second(){","    return this.adapter.sample_rate / this.adapter.scale;","  },","  /**","   * Return the amount of time represented by a single pixel.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.seconds_per_pixel);       // -> 0.010666666666666666","   * ```","   *","   * @return {number} Amount of time (in seconds) contained in a pixel.","   */","  get seconds_per_pixel(){","    return this.adapter.scale / this.adapter.sample_rate;","  },","  /**","   * Returns a value at a specific offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.at(20));              // -> -7","   * console.log(waveform.at(21));              // -> 12","   * ```","   *","   * @proxy","   * @param {Integer} index","   * @return {number} Offset value","   */","  at: function at_sample_proxy(index){","    return this.adapter.at(index);","  },","  /**","   * Return the pixel location for a certain time.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.at_time(0.0000000023));       // -> 10","   * ```","   * @param {number} time","   * @return {integer} Index location for a specific time.","   */","  at_time: function at_time(time){","    return Math.floor((time * this.adapter.sample_rate) / this.adapter.scale);","  },","  /**","   * Returns the time in seconds for a particular index","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.time(10));                    // -> 0.0000000023","   * ```","   *","   * @param {Integer} index","   * @return {number}","   */","  time: function time(index){","    return index * this.seconds_per_pixel;","  },","  /**","   * Return if a pixel lies within the current offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.in_offset(50));      // -> true","   * console.log(waveform.in_offset(120));     // -> true","   *","   * waveform.offset(100, 150);","   *","   * console.log(waveform.in_offset(50));      // -> false","   * console.log(waveform.in_offset(120));     // -> true","   * ```","   *","   * @param {number} pixel","   * @return {boolean} True if the pixel lies in the current offset, false otherwise.","   */","  in_offset: function isInOffset(pixel){","    return pixel >= this.offset_start && pixel < this.offset_end;","  },","  /**","   * Returns a min value for a specific offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.min_sample(10));      // -> -7","   * ```","   *","   * @param {Integer} offset","   * @return {Number} Offset min value","   */","  min_sample: function getMinValue(offset){","    return this.adapter.at(offset * 2);","  },","  /**","   * Returns a max value for a specific offset.","   *","   * ```javascript","   * var waveform = WaveformData.create({ ... });","   *","   * console.log(waveform.max_sample(10));      // -> 12","   * ```","   *","   * @param {Integer} offset","   * @return {Number} Offset max value","   */","  max_sample: function getMaxValue(offset){","    return this.adapter.at((offset * 2) + 1);","  }","};","","/**"," * Available adapters to manage the data backends."," *"," * @type {Object}"," */","WaveformData.adapters = {};","","","/**"," * WaveformData Adapter Structure"," *"," * @typedef {{from: Number, to: Number, platforms: {}}}"," */","WaveformData.adapter = function WaveformDataAdapter(response_data){","  this.data = response_data;","};",""],"l":{"3":1,"4":1,"30":1,"36":0,"53":0,"70":0,"72":0,"98":1,"99":0,"100":0,"102":0,"103":0,"106":0,"107":0,"108":0,"109":0,"113":0,"114":0,"117":0,"125":1,"146":0,"148":0,"149":0,"152":0,"153":0,"156":0,"157":0,"160":0,"161":0,"164":0,"165":0,"168":0,"169":0,"170":0,"195":0,"196":0,"199":0,"201":0,"223":0,"224":0,"227":0,"229":0,"249":0,"250":0,"284":0,"285":0,"290":0,"291":0,"292":0,"293":0,"295":0,"297":0,"298":0,"301":0,"302":0,"305":0,"306":0,"309":0,"310":0,"313":0,"314":0,"317":0,"318":0,"321":0,"322":0,"325":0,"326":0,"327":0,"328":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"338":0,"339":0,"342":0,"344":0,"345":0,"348":0,"349":0,"352":0,"353":0,"354":0,"355":0,"358":0,"360":0,"362":0,"363":0,"365":0,"366":0,"367":0,"371":0,"372":0,"374":0,"375":0,"378":0,"379":0,"381":0,"382":0,"385":0,"387":0,"388":0,"391":0,"394":0,"395":0,"399":0,"400":0,"401":0,"404":0,"405":0,"408":0,"435":6,"456":6,"467":12,"468":12,"470":12,"472":12,"473":0,"476":12,"493":4,"512":4,"527":4,"541":4,"558":0,"572":0,"587":0,"608":0,"623":0,"638":0,"647":1,"655":1,"656":0}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/segment.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/segment.js","s":{"1":1,"2":0,"3":0,"4":0,"5":1,"6":8,"7":0,"8":0,"9":0,"10":0,"11":16,"12":0,"13":0,"14":0,"15":0,"16":8,"17":8,"18":24,"19":8,"20":8},"b":{"1":[0,0],"2":[8,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[16,0],"7":[0,0],"8":[0,0],"9":[24,0,0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":8,"3":16,"4":8,"5":8,"6":24,"7":8,"8":8},"fnMap":{"1":{"name":"WaveformDataSegment","line":20,"loc":{"start":{"line":20,"column":43},"end":{"line":20,"column":92}}},"2":{"name":"(anonymous_2)","line":84,"loc":{"start":{"line":84,"column":18},"end":{"line":84,"column":20}}},"3":{"name":"(anonymous_3)","line":113,"loc":{"start":{"line":113,"column":16},"end":{"line":113,"column":18}}},"4":{"name":"(anonymous_4)","line":142,"loc":{"start":{"line":142,"column":19},"end":{"line":142,"column":21}}},"5":{"name":"(anonymous_5)","line":163,"loc":{"start":{"line":163,"column":12},"end":{"line":163,"column":14}}},"6":{"name":"(anonymous_6)","line":184,"loc":{"start":{"line":184,"column":13},"end":{"line":184,"column":15}}},"7":{"name":"(anonymous_7)","line":207,"loc":{"start":{"line":207,"column":9},"end":{"line":207,"column":11}}},"8":{"name":"(anonymous_8)","line":230,"loc":{"start":{"line":230,"column":9},"end":{"line":230,"column":11}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":60,"column":2}},"2":{"start":{"line":21,"column":2},"end":{"line":21,"column":25}},"3":{"start":{"line":40,"column":2},"end":{"line":40,"column":21}},"4":{"start":{"line":59,"column":2},"end":{"line":59,"column":17}},"5":{"start":{"line":65,"column":0},"end":{"line":233,"column":2}},"6":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"7":{"start":{"line":86,"column":6},"end":{"line":86,"column":39}},"8":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"9":{"start":{"line":90,"column":6},"end":{"line":90,"column":24}},"10":{"start":{"line":93,"column":4},"end":{"line":93,"column":16}},"11":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"12":{"start":{"line":115,"column":6},"end":{"line":115,"column":22}},"13":{"start":{"line":118,"column":4},"end":{"line":120,"column":5}},"14":{"start":{"line":119,"column":6},"end":{"line":119,"column":37}},"15":{"start":{"line":122,"column":4},"end":{"line":122,"column":16}},"16":{"start":{"line":143,"column":4},"end":{"line":143,"column":47}},"17":{"start":{"line":164,"column":4},"end":{"line":164,"column":33}},"18":{"start":{"line":185,"column":4},"end":{"line":185,"column":166}},"19":{"start":{"line":208,"column":4},"end":{"line":208,"column":99}},"20":{"start":{"line":231,"column":4},"end":{"line":231,"column":99}}},"branchMap":{"1":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"2":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":46}},{"start":{"line":85,"column":50},"end":{"line":85,"column":86}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]},"4":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":8},"end":{"line":89,"column":47}},{"start":{"line":89,"column":51},"end":{"line":89,"column":87}}]},"5":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"6":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":44}},{"start":{"line":114,"column":48},"end":{"line":114,"column":83}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"8":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":8},"end":{"line":118,"column":42}},{"start":{"line":118,"column":46},"end":{"line":118,"column":82}}]},"9":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":11},"end":{"line":185,"column":45}},{"start":{"line":185,"column":49},"end":{"line":185,"column":81}},{"start":{"line":185,"column":86},"end":{"line":185,"column":124}},{"start":{"line":185,"column":128},"end":{"line":185,"column":164}}]},"10":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":26},"end":{"line":208,"column":93}},{"start":{"line":208,"column":96},"end":{"line":208,"column":98}}]},"11":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":26},"end":{"line":231,"column":93}},{"start":{"line":231,"column":96},"end":{"line":231,"column":98}}]}},"code":["\"use strict\";","","/**"," * Segments are an easy way to keep track of portions of the described audio file."," *"," * They return values based on the actual offset. Which means if you change your offset and:"," *"," * * a segment becomes **out of scope**, no data will be returned;"," * * a segment is only **partially included in the offset**, only the visible parts will be returned;"," * * a segment is **fully included in the offset**, its whole content will be returned."," *"," * Segments are created with the `WaveformData.set_segment(from, to, name?)` method."," *"," * @see WaveformData.prototype.set_segment"," * @param {WaveformData} context WaveformData instance"," * @param {Integer} start Initial start index"," * @param {Integer} end Initial end index"," * @constructor"," */","var WaveformDataSegment = module.exports = function WaveformDataSegment(context, start, end){","  this.context = context;","","  /**","   * Start index.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.start);  // -> 10","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.start);  // -> 10","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.start);  // -> 10","   * ```","   * @type {Integer} Initial starting point of the segment.","   */","  this.start = start;","","  /**","   * End index.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.end);  // -> 50","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.end);  // -> 50","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.end);  // -> 50","   * ```","   * @type {Integer} Initial ending point of the segment.","   */","  this.end = end;","};","","/**"," * @namespace WaveformDataSegment"," */","WaveformDataSegment.prototype = {","  /**","   * Dynamic starting point based on the WaveformData instance offset.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.offset_start);  // -> 10","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.offset_start);  // -> 20","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.offset_start);  // -> null","   * ```","   *","   * @return {number} Starting point of the segment within the waveform offset. (inclusive)","   */","  get offset_start(){","    if (this.start < this.context.offset_start && this.end > this.context.offset_start){","      return this.context.offset_start;","    }","","    if (this.start >= this.context.offset_start && this.start < this.context.offset_end){","      return this.start;","    }","","    return null;","  },","  /**","   * Dynamic ending point based on the WaveformData instance offset.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.offset_end);  // -> 50","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.offset_end);  // -> 50","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.offset_end);  // -> null","   * ```","   *","   * @return {number} Ending point of the segment within the waveform offset. (exclusive)","   */","  get offset_end(){","    if (this.end > this.context.offset_start && this.end <= this.context.offset_end){","      return this.end;","    }","","    if (this.end > this.context.offset_end && this.start < this.context.offset_end){","      return this.context.offset_end;","    }","","    return null;","  },","  /**","   * Dynamic segment length based on the WaveformData instance offset.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.offset_length);  // -> 40","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.offset_length);  // -> 30","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.offset_length);  // -> 0","   * ```","   *","   * @return {number} Visible length of the segment within the waveform offset.","   */","  get offset_length(){","    return this.offset_end - this.offset_start;","  },","  /**","   * Initial length of the segment.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.length);  // -> 40","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.length);  // -> 40","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.length);  // -> 40","   * ```","   *","   * @return {number} Initial length of the segment.","   */","  get length(){","    return this.end - this.start;","  },","  /**","   * Indicates if the segment has some visible part in the actual WaveformData offset.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.visible);        // -> true","   *","   * waveform.offset(20, 50);","   * console.log(waveform.segments.example.visible);        // -> true","   *","   * waveform.offset(70, 100);","   * console.log(waveform.segments.example.visible);        // -> false","   * ```","   *","   * @return {Boolean} True if at least partly visible, false otherwise.","   */","  get visible(){","    return this.context.in_offset(this.start) || this.context.in_offset(this.end) || (this.context.offset_start > this.start && this.context.offset_start < this.end);","  },","  /**","   * Return the minimum values for the segment.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.min.length);        // -> 40","   * console.log(waveform.segments.example.min.offset_length); // -> 40","   * console.log(waveform.segments.example.min[0]);            // -> -12","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.segments.example.min.length);        // -> 40","   * console.log(waveform.segments.example.min.offset_length); // -> 30","   * console.log(waveform.segments.example.min[0]);            // -> -5","   * ```","   *","   * @return {Array.<Integer>} Min values of the segment.","   */","  get min(){","    return this.visible ? this.context.offsetValues(this.offset_start, this.offset_length, 0) : [];","  },","  /**","   * Return the maximum values for the segment.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_segment(10, 50, \"example\");","   *","   * console.log(waveform.segments.example.max.length);        // -> 40","   * console.log(waveform.segments.example.max.offset_length); // -> 40","   * console.log(waveform.segments.example.max[0]);            // -> 5","   *","   * waveform.offset(20, 50);","   *","   * console.log(waveform.segments.example.max.length);        // -> 40","   * console.log(waveform.segments.example.max.offset_length); // -> 30","   * console.log(waveform.segments.example.max[0]);            // -> 11","   * ```","   *","   * @return {Array.<Integer>} Max values of the segment.","   */","  get max(){","    return this.visible ? this.context.offsetValues(this.offset_start, this.offset_length, 1) : [];","  }","};"],"l":{"20":1,"21":0,"40":0,"59":0,"65":1,"85":8,"86":0,"89":0,"90":0,"93":0,"114":16,"115":0,"118":0,"119":0,"122":0,"143":8,"164":8,"185":24,"208":8,"231":8}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/point.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/point.js","s":{"1":1,"2":0,"3":0,"4":1,"5":8},"b":{},"f":{"1":0,"2":8},"fnMap":{"1":{"name":"WaveformDataPoint","line":19,"loc":{"start":{"line":19,"column":41},"end":{"line":19,"column":87}}},"2":{"name":"(anonymous_2)","line":64,"loc":{"start":{"line":64,"column":13},"end":{"line":64,"column":15}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":40,"column":2}},"2":{"start":{"line":20,"column":2},"end":{"line":20,"column":25}},"3":{"start":{"line":39,"column":2},"end":{"line":39,"column":29}},"4":{"start":{"line":45,"column":0},"end":{"line":67,"column":2}},"5":{"start":{"line":65,"column":4},"end":{"line":65,"column":50}}},"branchMap":{},"code":["\"use strict\";","","/**"," * Points are an easy way to keep track bookmarks of the described audio file."," *"," * They return values based on the actual offset. Which means if you change your offset and:"," *"," * * a point becomes **out of scope**, no data will be returned; "," * * a point is **fully included in the offset**, its whole content will be returned."," *"," * Points are created with the `WaveformData.set_point(timeStamp, name?)` method."," *"," * @see WaveformData.prototype.set_point"," * @param {WaveformData} context WaveformData instance"," * @param {Integer} start Initial start index"," * @param {Integer} end Initial end index"," * @constructor"," */","var WaveformDataPoint = module.exports = function WaveformDataPoint(context, timeStamp){","  this.context = context;","","  /**","   * Start index.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_point(10, \"example\");","   *","   * console.log(waveform.points.example.timeStamp);  // -> 10","   *","   * waveform.offset(20, 50);","   * console.log(waveform.points.example.timeStamp);  // -> 10","   *","   * waveform.offset(70, 100);","   * console.log(waveform.points.example.timeStamp);  // -> 10","   * ```","   * @type {Integer} Time Stamp of the point","   */","  this.timeStamp = timeStamp;","};","","/**"," * @namespace WaveformDataPoint"," */","WaveformDataPoint.prototype = {","  /**","   * Indicates if the point has some visible part in the actual WaveformData offset.","   *","   * ```javascript","   * var waveform = new WaveformData({ ... }, WaveformData.adapters.object);","   * waveform.set_point(10, \"example\");","   *","   * console.log(waveform.points.example.visible);        // -> true","   *","   * waveform.offset(0, 50);","   * console.log(waveform.points.example.visible);        // -> true","   *","   * waveform.offset(70, 100);","   * console.log(waveform.points.example.visible);        // -> false","   * ```","   *","   * @return {Boolean} True if visible, false otherwise.","   */","  get visible(){","    return this.context.in_offset(this.timeStamp);","  }","};"],"l":{"19":1,"20":0,"39":0,"45":1,"65":8}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":2}}},"branchMap":{},"code":["\"use strict\";","","module.exports = {","  \"arraybuffer\": require(\"./arraybuffer.js\"),","  \"object\": require(\"./object.js\")","};"],"l":{"3":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/arraybuffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/arraybuffer.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":8,"9":16,"10":8,"11":8,"12":8,"13":8,"14":0},"b":{"1":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":8,"5":16,"6":8,"7":8,"8":8,"9":8,"10":0},"fnMap":{"1":{"name":"WaveformDataArrayBufferAdapter","line":17,"loc":{"start":{"line":17,"column":54},"end":{"line":17,"column":108}}},"2":{"name":"isCompatible","line":29,"loc":{"start":{"line":29,"column":46},"end":{"line":29,"column":73}}},"3":{"name":"fromArrayBufferResponseData","line":64,"loc":{"start":{"line":64,"column":50},"end":{"line":64,"column":101}}},"4":{"name":"(anonymous_4)","line":77,"loc":{"start":{"line":77,"column":13},"end":{"line":77,"column":15}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":14},"end":{"line":88,"column":16}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":15},"end":{"line":96,"column":17}}},"7":{"name":"(anonymous_7)","line":104,"loc":{"start":{"line":104,"column":17},"end":{"line":104,"column":19}}},"8":{"name":"(anonymous_8)","line":112,"loc":{"start":{"line":112,"column":11},"end":{"line":112,"column":13}}},"9":{"name":"(anonymous_9)","line":120,"loc":{"start":{"line":120,"column":12},"end":{"line":120,"column":14}}},"10":{"name":"at_sample","line":129,"loc":{"start":{"line":129,"column":6},"end":{"line":129,"column":31}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"2":{"start":{"line":18,"column":2},"end":{"line":18,"column":28}},"3":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":66}},"5":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"6":{"start":{"line":65,"column":2},"end":{"line":65,"column":73}},"7":{"start":{"line":71,"column":0},"end":{"line":132,"column":2}},"8":{"start":{"line":78,"column":4},"end":{"line":78,"column":39}},"9":{"start":{"line":89,"column":4},"end":{"line":89,"column":42}},"10":{"start":{"line":97,"column":4},"end":{"line":97,"column":26}},"11":{"start":{"line":105,"column":4},"end":{"line":105,"column":39}},"12":{"start":{"line":113,"column":4},"end":{"line":113,"column":40}},"13":{"start":{"line":121,"column":4},"end":{"line":121,"column":41}},"14":{"start":{"line":130,"column":4},"end":{"line":130,"column":53}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":13}},{"start":{"line":30,"column":17},"end":{"line":30,"column":41}},{"start":{"line":30,"column":45},"end":{"line":30,"column":65}}]}},"code":["\"use strict\";","","/**"," * ArrayBuffer adapter consumes binary waveform data (data format version 1)."," * It is used as a data abstraction layer by `WaveformData`."," *"," * This is supposed to be the fastest adapter ever:"," * * **Pros**: working directly in memory, everything is done by reference (including the offsetting)"," * * **Cons**: binary data are hardly readable without data format knowledge (and this is why this adapter exists)."," *"," * Also, it is recommended to use the `fromResponseData` factory."," *"," * @see WaveformDataArrayBufferAdapter.fromResponseData"," * @param {DataView} response_data"," * @constructor"," */","var WaveformDataArrayBufferAdapter = module.exports = function WaveformDataArrayBufferAdapter(response_data){","  this.data = response_data;","};","","/**"," * Detects if a set of data is suitable for the ArrayBuffer adapter."," * It is used internally by `WaveformData.create` so you should not bother using it."," *"," * @static"," * @param {Mixed} data"," * @returns {boolean}"," */","WaveformDataArrayBufferAdapter.isCompatible = function isCompatible(data){","  return data && typeof data === \"object\" && \"byteLength\" in data;","};","","/**"," * Setup factory to create an adapter based on heterogeneous input formats."," *"," * It is the preferred way to build an adapter instance."," *"," * ```javascript"," * var arrayBufferAdapter = WaveformData.adapters.arraybuffer;"," * var xhr = new XMLHttpRequest();"," *"," * // .dat file generated by audiowaveform program"," * xhr.open(\"GET\", \"http://example.com/waveforms/track.dat\");"," * xhr.responseType = \"arraybuffer\";"," * xhr.addEventListener(\"load\", function onResponse(progressEvent){"," *  var responseData = progressEvent.target.response;"," *"," *  // doing stuff with the raw data ..."," *  // you only have access to WaveformDataArrayBufferAdapter API"," *  var adapter = arrayBufferAdapter.fromResponseData(responseData);"," *"," *  // or making things easy by using WaveformData ..."," *  // you have access WaveformData API"," *  var waveform = new WaveformData(responseData, arrayBufferAdapter);"," * });"," *"," * xhr.send();"," * ```",""," * @static"," * @param {ArrayBuffer} response_data"," * @return {WaveformDataArrayBufferAdapter}"," */","WaveformDataArrayBufferAdapter.fromResponseData = function fromArrayBufferResponseData(response_data){","  return new WaveformDataArrayBufferAdapter(new DataView(response_data));","};","","/**"," * @namespace WaveformDataArrayBufferAdapter"," */","WaveformDataArrayBufferAdapter.prototype = {","  /**","   * Returns the data format version number.","   *","   * @return {Integer} Version number of the consumed data format.","   */","  get version(){","    return this.data.getInt32(0, true);","  },","  /**","   * Indicates if the response body is encoded in 8bits.","   *","   * **Notice**: currently the adapter only deals with 8bits encoded data.","   * You should favor that too because of the smaller data network fingerprint.","   *","   * @return {boolean} True if data are declared to be 8bits encoded.","   */","  get is_8_bit(){","    return !!this.data.getUint32(4, true);","  },","  /**","   * Indicates if the response body is encoded in 16bits.","   *","   * @return {boolean} True if data are declared to be 16bits encoded.","   */","  get is_16_bit(){","    return !this.is_8_bit;","  },","  /**","   * Returns the number of samples per second.","   *","   * @return {Integer} Number of samples per second.","   */","  get sample_rate(){","    return this.data.getInt32(8, true);","  },","  /**","   * Returns the scale (number of samples per pixel).","   *","   * @return {Integer} Number of samples per pixel.","   */","  get scale(){","    return this.data.getInt32(12, true);","  },","  /**","   * Returns the length of the waveform data (number of data points).","   *","   * @return {Integer} Length of the waveform data.","   */","  get length(){","    return this.data.getUint32(16, true);","  },","  /**","   * Returns a value at a specific offset.","   *","   * @param {Integer} index","   * @return {number} waveform value","   */","  at: function at_sample(index){","    return Math.round(this.data.getInt8(20 + index));","  }","};",""],"l":{"17":1,"18":0,"29":1,"30":0,"64":1,"65":0,"71":1,"78":8,"89":16,"97":8,"105":8,"113":8,"121":8,"130":0}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/object.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/adapters/object.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":8,"11":16,"12":8,"13":8,"14":8,"15":8,"16":0},"b":{"1":[0,0,0,0,0],"2":[0,0],"3":[8,0]},"f":{"1":0,"2":0,"3":0,"4":8,"5":16,"6":8,"7":8,"8":8,"9":8,"10":0},"fnMap":{"1":{"name":"WaveformDataObjectAdapter","line":17,"loc":{"start":{"line":17,"column":49},"end":{"line":17,"column":98}}},"2":{"name":"isCompatible","line":29,"loc":{"start":{"line":29,"column":41},"end":{"line":29,"column":68}}},"3":{"name":"fromJSONResponseData","line":64,"loc":{"start":{"line":64,"column":45},"end":{"line":64,"column":89}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":13},"end":{"line":81,"column":15}}},"5":{"name":"(anonymous_5)","line":92,"loc":{"start":{"line":92,"column":14},"end":{"line":92,"column":16}}},"6":{"name":"(anonymous_6)","line":100,"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":17}}},"7":{"name":"(anonymous_7)","line":108,"loc":{"start":{"line":108,"column":17},"end":{"line":108,"column":19}}},"8":{"name":"(anonymous_8)","line":116,"loc":{"start":{"line":116,"column":11},"end":{"line":116,"column":13}}},"9":{"name":"(anonymous_9)","line":124,"loc":{"start":{"line":124,"column":12},"end":{"line":124,"column":14}}},"10":{"name":"at_sample","line":133,"loc":{"start":{"line":133,"column":6},"end":{"line":133,"column":31}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":19,"column":2}},"2":{"start":{"line":18,"column":2},"end":{"line":18,"column":28}},"3":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"4":{"start":{"line":30,"column":2},"end":{"line":30,"column":136}},"5":{"start":{"line":64,"column":0},"end":{"line":71,"column":2}},"6":{"start":{"line":65,"column":2},"end":{"line":70,"column":3}},"7":{"start":{"line":66,"column":4},"end":{"line":66,"column":68}},"8":{"start":{"line":69,"column":4},"end":{"line":69,"column":56}},"9":{"start":{"line":75,"column":0},"end":{"line":136,"column":2}},"10":{"start":{"line":82,"column":4},"end":{"line":82,"column":34}},"11":{"start":{"line":93,"column":4},"end":{"line":93,"column":32}},"12":{"start":{"line":101,"column":4},"end":{"line":101,"column":26}},"13":{"start":{"line":109,"column":4},"end":{"line":109,"column":33}},"14":{"start":{"line":117,"column":4},"end":{"line":117,"column":39}},"15":{"start":{"line":125,"column":4},"end":{"line":125,"column":28}},"16":{"start":{"line":134,"column":4},"end":{"line":134,"column":45}}},"branchMap":{"1":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":9},"end":{"line":30,"column":13}},{"start":{"line":30,"column":18},"end":{"line":30,"column":42}},{"start":{"line":30,"column":46},"end":{"line":30,"column":67}},{"start":{"line":30,"column":73},"end":{"line":30,"column":97}},{"start":{"line":30,"column":101},"end":{"line":30,"column":134}}]},"2":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"3":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":11},"end":{"line":82,"column":28}},{"start":{"line":82,"column":32},"end":{"line":82,"column":33}}]}},"code":["\"use strict\";","","/**"," * Object adapter consumes stringified JSON or JSON waveform data (data format version 1)."," * It is used as a data abstraction layer by `WaveformData`."," *"," * This is supposed to be a fallback for browsers not supporting ArrayBuffer:"," * * **Pros**: easy to debug response_data and quite self describing."," * * **Cons**: slower than ArrayBuffer, more memory consumption."," *"," * Also, it is recommended to use the `fromResponseData` factory."," *"," * @see WaveformDataObjectAdapter.fromResponseData"," * @param {String|Object} response_data JSON or stringified JSON"," * @constructor"," */","var WaveformDataObjectAdapter = module.exports = function WaveformDataObjectAdapter(response_data){","  this.data = response_data;","};","","/**"," * Detects if a set of data is suitable for the Object adapter."," * It is used internally by `WaveformData.create` so you should not bother using it."," *"," * @static"," * @param {Mixed} data"," * @returns {boolean}"," */","WaveformDataObjectAdapter.isCompatible = function isCompatible(data){","  return data && (typeof data === \"object\" && \"sample_rate\" in data) || (typeof data === \"string\" && \"sample_rate\" in JSON.parse(data));","};","","/**"," * Setup factory to create an adapter based on heterogeneous input formats."," *"," * It is the preferred way to build an adapter instance."," *"," * ```javascript"," * var objectAdapter = WaveformData.adapters.object;"," * var xhr = new XMLHttpRequest();"," *"," * // .dat file generated by audiowaveform program"," * xhr.open(\"GET\", \"http://example.com/waveforms/track.json\");"," * xhr.responseType = \"json\";"," * xhr.addEventListener(\"load\", function onResponse(progressEvent){"," *  var responseData = progressEvent.target.response;"," *"," *  // doing stuff with the raw data ..."," *  // you only have access to WaveformDataObjectAdapter API"," *  var adapter = objectAdapter.fromResponseData(responseData);"," *"," *  // or making things easy by using WaveformData ..."," *  // you have access WaveformData API"," *  var waveform = new WaveformData(responseData, objectAdapter);"," * });"," *"," * xhr.send();"," * ```",""," * @static"," * @param {String|Object} response_data JSON or stringified JSON"," * @return {WaveformDataObjectAdapter}"," */","WaveformDataObjectAdapter.fromResponseData = function fromJSONResponseData(response_data){","  if (typeof response_data === \"string\"){","    return new WaveformDataObjectAdapter(JSON.parse(response_data));","  }","  else{","    return new WaveformDataObjectAdapter(response_data);","  }","};","/**"," * @namespace WaveformDataObjectAdapter"," */","WaveformDataObjectAdapter.prototype = {","  /**","   * Returns the data format version number.","   *","   * @return {Integer} Version number of the consumed data format.","   */","  get version(){","    return this.data.version || 1;","  },","  /**","   * Indicates if the response body is encoded in 8bits.","   *","   * **Notice**: currently the adapter only deals with 8bits encoded data.","   * You should favor that too because of the smaller data network fingerprint.","   *","   * @return {boolean} True if data are declared to be 8bits encoded.","   */","  get is_8_bit(){","    return this.data.bits === 8;","  },","  /**","   * Indicates if the response body is encoded in 16bits.","   *","   * @return {boolean} True if data are declared to be 16bits encoded.","   */","  get is_16_bit(){","    return !this.is_8_bit;","  },","  /**","   * Returns the number of samples per second.","   *","   * @return {Integer} Number of samples per second.","   */","  get sample_rate(){","    return this.data.sample_rate;","  },","  /**","   * Returns the scale (number of samples per pixel).","   *","   * @return {Integer} Number of samples per pixel.","   */","  get scale(){","    return this.data.samples_per_pixel;","  },","  /**","   * Returns the length of the waveform data (number of data points).","   *","   * @return {Integer} Length of the waveform data.","   */","  get length(){","    return this.data.length;","  },","  /**","   * Returns a value at a specific offset.","   *","   * @param {Integer} index","   * @return {number} waveform value","   */","  at: function at_sample(index){","    return Math.round(this.data.data[index]);","  }","};",""],"l":{"17":1,"18":0,"29":1,"30":0,"64":1,"65":0,"66":0,"69":0,"75":1,"82":8,"93":16,"101":8,"109":8,"117":8,"125":8,"134":0}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":17},"end":{"line":5,"column":34}}},"2":{"name":"excludePrototypeObject","line":27,"loc":{"start":{"line":27,"column":12},"end":{"line":27,"column":52}}},"3":{"name":"excludeSingleLineComment","line":30,"loc":{"start":{"line":30,"column":12},"end":{"line":30,"column":54}}},"4":{"name":"excludeTypedefTag","line":33,"loc":{"start":{"line":33,"column":12},"end":{"line":33,"column":47}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":39},"end":{"line":34,"column":52}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":47,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":40,"column":5}},"3":{"start":{"line":28,"column":14},"end":{"line":28,"column":69}},"4":{"start":{"line":31,"column":14},"end":{"line":31,"column":86}},"5":{"start":{"line":34,"column":14},"end":{"line":34,"column":88}},"6":{"start":{"line":34,"column":54},"end":{"line":34,"column":84}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":39}},"8":{"start":{"line":45,"column":2},"end":{"line":45,"column":43}},"9":{"start":{"line":46,"column":2},"end":{"line":46,"column":44}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":21},"end":{"line":28,"column":32}},{"start":{"line":28,"column":36},"end":{"line":28,"column":68}}]}},"code":["\"use strict\";","","// jshint node:true","","module.exports = function (grunt) {","","  // Project configuration.","  grunt.initConfig({","    pkg: require('./package.json'),","    banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +","      '<%= grunt.template.today(\"yyyy-mm-dd\") %>\\n' +","      '<%= pkg.homepage ? \"* \" + pkg.homepage + \"\\\\n\" : \"\" %>' +","      '* Copyright (c) <%= grunt.template.today(\"yyyy\") %> <%= pkg.author.name %>;' +","      ' Licensed <%= pkg.license %> */\\n',","","    jsdoc_md: {","      main: {","        files: {","          \"doc/WaveformData.md\": \"lib/core.js\",","          \"doc/WaveformDataPoint.md\": \"lib/point.js\",","          \"doc/WaveformDataSegment.md\": \"lib/segment.js\",","          \"doc/WaveformDataArrayBufferAdapter.md\": \"lib/adapters/arraybuffer.js\",","          \"doc/WaveformDataObjectAdapter.md\": \"lib/adapters/object.js\"","        },","        options: {","          filters: [","            function excludePrototypeObject(comment){","              return comment.ctx && comment.ctx.type === \"prototype\";","            },","            function excludeSingleLineComment(comment){","              return comment.description.full.match(/^[ \\t]*(globals|jshint|jslint)/);","            },","            function excludeTypedefTag(comment){","              return comment.tags.some(function(tag){ return tag.type === \"typedef\"; });","            }","          ]","        }","      }","    }","  });","","  // These plugins provide necessary tasks.","  grunt.loadNpmTasks(\"grunt-jsdoc-md\");","","  grunt.registerTask(\"default\", [\"build\"]);","  grunt.registerTask(\"build\", [\"jsdoc_md\"]);","};",""],"l":{"5":1,"8":0,"28":0,"31":0,"34":0,"43":0,"45":0,"46":0}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/karma.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/karma.conf.js","s":{"1":1,"2":0,"3":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":17},"end":{"line":1,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":2}},"2":{"start":{"line":2,"column":2},"end":{"line":2,"column":37}},"3":{"start":{"line":4,"column":2},"end":{"line":40,"column":5}}},"branchMap":{"1":{"line":31,"type":"cond-expr","locations":[{"start":{"line":31,"column":22},"end":{"line":31,"column":28}},{"start":{"line":31,"column":31},"end":{"line":31,"column":41}}]},"2":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":21},"end":{"line":37,"column":32}},{"start":{"line":37,"column":35},"end":{"line":37,"column":67}}]}},"code":["module.exports = function(config){","  var isCI = Boolean(process.env.CI);","","  config.set({","    basePath: '',","","    files: [","      { pattern: 'lib/**/*.js', included: false, served: false, watched: true },","      'test/unit/**/*.js'","    ],","","    frameworks: ['mocha', 'browserify'],","","    preprocessors: {","      'test/**/*.js': ['browserify'],","      'waveform-data.js': ['browserify']","    },","","    browserify: {","      debug: true,","      external: ['dist/waveform-data.min.js'],","      transform: [","        'brfs'","      ]","    },","","    plugins: [","      'karma-*'","    ],","","    reporters: isCI ? 'dots' : 'progress',","    port: 8080,","    runnerPort: 9100,","    colors: true,","    logLevel: config.LOG_INFO,","    autoWatch: !isCI,","    browsers: isCI ? ['Firefox'] : ['Chrome', 'Safari', 'Firefox' ],","    captureTimeout: 5000,","    singleRun: true","  });","};",""],"l":{"1":1,"2":0,"4":0}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/webaudio.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/webaudio.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":60}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}}},"branchMap":{},"code":["\"use strict\";","","var webAudioBuilder = require(\"./lib/builders/webaudio.js\");","","module.exports = webAudioBuilder;",""],"l":{"3":1,"5":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/builders/webaudio.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/builders/webaudio.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"fromAudioObjectBuilder","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":79}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"2":{"start":{"line":41,"column":0},"end":{"line":82,"column":1}},"3":{"start":{"line":42,"column":2},"end":{"line":42,"column":70}},"4":{"start":{"line":43,"column":2},"end":{"line":46,"column":4}},"5":{"start":{"line":48,"column":2},"end":{"line":50,"column":3}},"6":{"start":{"line":49,"column":4},"end":{"line":49,"column":87}},"7":{"start":{"line":53,"column":2},"end":{"line":59,"column":3}},"8":{"start":{"line":54,"column":4},"end":{"line":54,"column":23}},"9":{"start":{"line":55,"column":4},"end":{"line":55,"column":17}},"10":{"start":{"line":58,"column":4},"end":{"line":58,"column":28}},"11":{"start":{"line":61,"column":2},"end":{"line":61,"column":56}},"12":{"start":{"line":62,"column":2},"end":{"line":62,"column":86}},"13":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"14":{"start":{"line":65,"column":4},"end":{"line":65,"column":86}},"15":{"start":{"line":77,"column":2},"end":{"line":81,"column":4}},"16":{"start":{"line":84,"column":0},"end":{"line":84,"column":40}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":21},"end":{"line":42,"column":40}},{"start":{"line":42,"column":44},"end":{"line":42,"column":69}}]},"2":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":14},"end":{"line":58,"column":21}},{"start":{"line":58,"column":25},"end":{"line":58,"column":27}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":18},"end":{"line":61,"column":31}},{"start":{"line":61,"column":35},"end":{"line":61,"column":55}}]},"6":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":28},"end":{"line":62,"column":51}},{"start":{"line":62,"column":55},"end":{"line":62,"column":85}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]}},"code":["\"use strict\";","","var audioDecoder = require('./audiodecoder.js');","","/**"," * Creates a working WaveformData based on binary audio data."," *"," * This is still quite experimental and the result will mostly depend of the"," * support state of the running browser."," *"," * ```javascript"," * var xhr = new XMLHttpRequest();"," * var audioContext = new AudioContext();"," *"," * // URL of a CORS MP3/Ogg file"," * xhr.open(\"GET\", \"http://example.com/audio/track.ogg\");"," * xhr.responseType = \"arraybuffer\";"," *"," * xhr.addEventListener(\"load\", function onResponse(progressEvent){"," *   WaveformData.builders.webaudio(audioContext, progressEvent.target.response, onProcessed(err, waveform){"," *     if (err) {"," *        console.error(err);"," *        return;"," *     }"," *"," *     console.log(waveform.duration);"," *   });"," * });"," *"," * xhr.send();"," *  ```"," *"," * @todo use a Web Worker to offload processing of the binary data"," * @todo or use `SourceBuffer.appendBuffer` and `ProgressEvent` to stream the decoding"," * @todo abstract the number of channels, because it is assumed the audio file is stereo"," * @param {AudioContext|webkitAudioContext} audio_context"," * @param {ArrayBuffer} raw_response"," * @param {callback} what to do once the decoding is done"," * @constructor"," */","function fromAudioObjectBuilder(audio_context, raw_response, options, callback){","  var audioContext = window.AudioContext || window.webkitAudioContext;","  var defaultOptions = {","    scale: 512,","    amplitude_scale: 1.0","  };","","  if ((audio_context instanceof audioContext) === false) {","    throw new TypeError('First argument should be an instance of window.AudioContext');","  }","","  // fromAudioObjectBuilder(audioContext, data, callback) form","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  else {","    options = options || {};","  }","","  options.scale = options.scale || defaultOptions.scale;","  options.amplitude_scale = options.amplitude_scale || defaultOptions.amplitude_scale;","","  if (options.hasOwnProperty('scale_adjuster')) {","    throw new Error(\"Please rename the 'scale_adjuster' option to 'amplitude_scale'\");","  }","","  /*","   * The result will vary on the codec implentation of the browser.","   * We don't handle the case where the browser is unable to handle the decoding.","   *","   * @see https://webaudio.github.io/web-audio-api/#widl-BaseAudioContext-createWaveShaper-WaveShaperNode","   *","   * Adapted from BlockFile::CalcSummary in Audacity, with permission.","   * @see https://code.google.com/p/audacity/source/browse/audacity-src/trunk/src/BlockFile.cpp","   */","  return audio_context.decodeAudioData(","    raw_response,","    audioDecoder(options, callback),","    callback","  );","}","","module.exports = fromAudioObjectBuilder;",""],"l":{"3":1,"41":1,"42":0,"43":0,"48":0,"49":0,"53":0,"54":0,"55":0,"58":0,"61":0,"62":0,"64":0,"65":0,"77":0,"84":1}},"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/builders/audiodecoder.js":{"path":"/home/travis/build/npmtest/node-npmtest-waveform-data/node_modules/waveform-data/lib/builders/audiodecoder.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"calculateWaveformDataLength","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":64}}},"2":{"name":"getAudioDecoder","line":32,"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":60}}},"3":{"name":"onAudioDecoded","line":39,"loc":{"start":{"line":39,"column":9},"end":{"line":39,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":5,"column":0},"end":{"line":15,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":6,"column":59}},"4":{"start":{"line":8,"column":2},"end":{"line":8,"column":69}},"5":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":18}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":21}},"8":{"start":{"line":32,"column":0},"end":{"line":103,"column":2}},"9":{"start":{"line":33,"column":2},"end":{"line":33,"column":28}},"10":{"start":{"line":34,"column":2},"end":{"line":34,"column":48}},"11":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"12":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"13":{"start":{"line":39,"column":2},"end":{"line":102,"column":4}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":78}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":25}},"16":{"start":{"line":42,"column":4},"end":{"line":42,"column":83}},"17":{"start":{"line":43,"column":4},"end":{"line":43,"column":22}},"18":{"start":{"line":44,"column":4},"end":{"line":44,"column":16}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":71}},"20":{"start":{"line":46,"column":4},"end":{"line":46,"column":44}},"21":{"start":{"line":47,"column":4},"end":{"line":47,"column":29}},"22":{"start":{"line":48,"column":4},"end":{"line":48,"column":10}},"23":{"start":{"line":50,"column":4},"end":{"line":50,"column":37}},"24":{"start":{"line":51,"column":4},"end":{"line":51,"column":38}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":59}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":42}},"27":{"start":{"line":54,"column":4},"end":{"line":54,"column":48}},"28":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"29":{"start":{"line":57,"column":6},"end":{"line":57,"column":63}},"30":{"start":{"line":60,"column":4},"end":{"line":90,"column":5}},"31":{"start":{"line":61,"column":6},"end":{"line":61,"column":21}},"32":{"start":{"line":63,"column":6},"end":{"line":65,"column":7}},"33":{"start":{"line":64,"column":8},"end":{"line":64,"column":39}},"34":{"start":{"line":67,"column":6},"end":{"line":67,"column":81}},"35":{"start":{"line":69,"column":6},"end":{"line":75,"column":7}},"36":{"start":{"line":70,"column":8},"end":{"line":70,"column":27}},"37":{"start":{"line":72,"column":8},"end":{"line":74,"column":9}},"38":{"start":{"line":73,"column":10},"end":{"line":73,"column":31}},"39":{"start":{"line":77,"column":6},"end":{"line":83,"column":7}},"40":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"41":{"start":{"line":80,"column":8},"end":{"line":82,"column":9}},"42":{"start":{"line":81,"column":10},"end":{"line":81,"column":31}},"43":{"start":{"line":85,"column":6},"end":{"line":89,"column":7}},"44":{"start":{"line":86,"column":8},"end":{"line":86,"column":61}},"45":{"start":{"line":87,"column":8},"end":{"line":87,"column":61}},"46":{"start":{"line":88,"column":8},"end":{"line":88,"column":29}},"47":{"start":{"line":88,"column":30},"end":{"line":88,"column":52}},"48":{"start":{"line":88,"column":53},"end":{"line":88,"column":71}},"49":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"50":{"start":{"line":93,"column":8},"end":{"line":93,"column":61}},"51":{"start":{"line":94,"column":8},"end":{"line":94,"column":61}},"52":{"start":{"line":97,"column":4},"end":{"line":101,"column":6}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"3":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":72,"column":8}},{"start":{"line":72,"column":8},"end":{"line":72,"column":8}}]},"4":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"6":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]}},"code":["'use strict';","","var WaveformData = require('../../waveform-data.js');","","function calculateWaveformDataLength(audio_sample_count, scale) {","  var data_length = Math.floor(audio_sample_count / scale);","","  var samples_remaining = audio_sample_count - (data_length * scale);","","  if (samples_remaining > 0) {","    data_length++;","  }","","  return data_length;","}","","/**"," * This callback is executed once the audio has been decoded by the browser and resampled by waveform-data."," *"," * @callback onAudioResampled"," * @param {WaveformData} waveform_data Waveform instance of the browser decoded audio"," * @param {AudioBuffer} audio_buffer Decoded audio buffer"," */","","/**"," * AudioBuffer-based WaveformData generator"," *"," * @param {Object.<{scale: Number, amplitude_scale: Number}>} options"," * @param {onAudioResampled} callback"," * @returns {Function.<AudioBuffer>}"," */","module.exports = function getAudioDecoder(options, callback){","  var scale = options.scale;","  var amplitude_scale = options.amplitude_scale;","","  var INT8_MAX = 127;","  var INT8_MIN = -128;","","  return function onAudioDecoded(audio_buffer) {","    var data_length = calculateWaveformDataLength(audio_buffer.length, scale);","    var header_size = 20;","    var data_object = new DataView(new ArrayBuffer(header_size + data_length * 2));","    var channels = [];","    var channel;","    var min_value = Infinity, max_value = -Infinity, scale_counter = 0;","    var buffer_length = audio_buffer.length;","    var offset = header_size;","    var i;","","    data_object.setInt32(0, 1, true);   //version","    data_object.setUint32(4, 1, true);   //is 8 bit","    data_object.setInt32(8, audio_buffer.sampleRate, true);   //sample rate","    data_object.setInt32(12, scale, true);   //scale","    data_object.setInt32(16, data_length, true);   //length","","    for (channel = 0; channel < audio_buffer.numberOfChannels; ++channel) {","      channels[channel] = audio_buffer.getChannelData(channel);","    }","","    for (i = 0; i < buffer_length; i++){","      var sample = 0;","","      for (channel = 0; channel < channels.length; ++channel) {","        sample += channels[channel][i];","      }","","      sample = Math.floor(INT8_MAX * sample * amplitude_scale / channels.length);","","      if (sample < min_value){","        min_value = sample;","","        if (min_value < INT8_MIN) {","          min_value = INT8_MIN;","        }","      }","","      if (sample > max_value){","        max_value = sample;","","        if (max_value > INT8_MAX) {","          max_value = INT8_MAX;","        }","      }","","      if (++scale_counter === scale){","        data_object.setInt8(offset++, Math.floor(min_value));","        data_object.setInt8(offset++, Math.floor(max_value));","        min_value = Infinity; max_value = -Infinity; scale_counter = 0;","      }","    }","","    if (scale_counter > 0) {","        data_object.setInt8(offset++, Math.floor(min_value));","        data_object.setInt8(offset++, Math.floor(max_value));","    }","","    callback(","      null,","      new WaveformData(data_object.buffer, WaveformData.adapters.arraybuffer),","      audio_buffer","    );","  };","};",""],"l":{"3":1,"5":1,"6":0,"8":0,"10":0,"11":0,"14":0,"32":1,"33":0,"34":0,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"60":0,"61":0,"63":0,"64":0,"67":0,"69":0,"70":0,"72":0,"73":0,"77":0,"78":0,"80":0,"81":0,"85":0,"86":0,"87":0,"88":0,"92":0,"93":0,"94":0,"97":0}}}